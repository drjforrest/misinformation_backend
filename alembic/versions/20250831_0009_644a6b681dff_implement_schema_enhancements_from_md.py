"""implement_schema_enhancements_from_md

Revision ID: 644a6b681dff
Revises: fac8e0a0d167
Create Date: 2025-08-31 00:09:56.447905

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '644a6b681dff'
down_revision = 'fac8e0a0d167'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('canadian_user_proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_user_id', sa.String(length=100), nullable=True),
    sa.Column('original_username_hash', sa.String(length=64), nullable=True),
    sa.Column('canadian_probability', sa.Float(), nullable=True),
    sa.Column('healthcare_references', sa.Integer(), nullable=True),
    sa.Column('canadian_spelling_score', sa.Float(), nullable=True),
    sa.Column('timezone_pattern', sa.String(length=50), nullable=True),
    sa.Column('subreddit_patterns', sa.Text(), nullable=True),
    sa.Column('cultural_markers', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_user_id')
    )
    op.create_table('misinformation_severity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('annotation_id', sa.Integer(), nullable=True),
    sa.Column('severity_level', sa.Integer(), nullable=True),
    sa.Column('harm_potential', sa.String(length=50), nullable=True),
    sa.Column('urgency_score', sa.Integer(), nullable=True),
    sa.Column('misinformation_type', sa.String(length=50), nullable=True),
    sa.Column('health_topic', sa.String(length=100), nullable=True),
    sa.Column('target_population', sa.String(length=100), nullable=True),
    sa.Column('suggested_response', sa.String(length=50), nullable=True),
    sa.Column('resource_needed', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['annotation_id'], ['post_annotations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_user_id', sa.String(length=100), nullable=True),
    sa.Column('target_user_id', sa.String(length=100), nullable=True),
    sa.Column('interaction_type', sa.String(length=50), nullable=True),
    sa.Column('post_id', sa.String(length=50), nullable=True),
    sa.Column('comment_id', sa.String(length=50), nullable=True),
    sa.Column('interaction_timestamp', sa.DateTime(), nullable=True),
    sa.Column('subreddit_context', sa.String(length=100), nullable=True),
    sa.Column('interaction_weight', sa.Float(), nullable=True),
    sa.Column('is_misinformation_related', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['reddit_comments.comment_id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['reddit_posts.post_id'], ),
    sa.ForeignKeyConstraint(['source_user_id'], ['canadian_user_proxies.study_user_id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['canadian_user_proxies.study_user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('intervention_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.String(length=50), nullable=True),
    sa.Column('severity_id', sa.Integer(), nullable=True),
    sa.Column('response_type', sa.String(length=50), nullable=True),
    sa.Column('generated_content', sa.Text(), nullable=True),
    sa.Column('resource_links', sa.Text(), nullable=True),
    sa.Column('was_deployed', sa.Boolean(), nullable=True),
    sa.Column('deployment_timestamp', sa.DateTime(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['reddit_posts.post_id'], ),
    sa.ForeignKeyConstraint(['severity_id'], ['misinformation_severity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('post_annotations', sa.Column('severity_level', sa.Integer(), nullable=True))
    op.add_column('post_annotations', sa.Column('misinformation_type', sa.String(length=50), nullable=True))
    op.add_column('post_annotations', sa.Column('target_community', sa.String(length=100), nullable=True))
    op.add_column('post_annotations', sa.Column('intervention_priority', sa.String(length=20), nullable=True))
    op.add_column('reddit_posts', sa.Column('non_official_language_indicators', sa.Text(), nullable=True))
    op.add_column('reddit_posts', sa.Column('code_switching_score', sa.Float(), nullable=True))
    op.add_column('reddit_posts', sa.Column('translation_patterns', sa.Boolean(), nullable=True))
    op.add_column('reddit_posts', sa.Column('cultural_health_references', sa.Text(), nullable=True))
    op.add_column('user_stats', sa.Column('community_expertise', sa.Text(), nullable=True))
    op.add_column('user_stats', sa.Column('language_communities', sa.Text(), nullable=True))
    op.add_column('user_stats', sa.Column('cultural_competency_score', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_stats', 'cultural_competency_score')
    op.drop_column('user_stats', 'language_communities')
    op.drop_column('user_stats', 'community_expertise')
    op.drop_column('reddit_posts', 'cultural_health_references')
    op.drop_column('reddit_posts', 'translation_patterns')
    op.drop_column('reddit_posts', 'code_switching_score')
    op.drop_column('reddit_posts', 'non_official_language_indicators')
    op.drop_column('post_annotations', 'intervention_priority')
    op.drop_column('post_annotations', 'target_community')
    op.drop_column('post_annotations', 'misinformation_type')
    op.drop_column('post_annotations', 'severity_level')
    op.drop_table('intervention_responses')
    op.drop_table('user_interactions')
    op.drop_table('misinformation_severity')
    op.drop_table('canadian_user_proxies')
    # ### end Alembic commands ###
