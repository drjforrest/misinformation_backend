"""Initial database schema with pgvector support

Revision ID: a6da6b6a31aa
Revises:
Create Date: 2025-09-04 15:09:57.265731

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision = "a6da6b6a31aa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "canadian_user_proxies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("study_user_id", sa.String(length=100), nullable=True),
        sa.Column("original_username_hash", sa.String(length=64), nullable=True),
        sa.Column("canadian_probability", sa.Float(), nullable=True),
        sa.Column("healthcare_references", sa.Integer(), nullable=True),
        sa.Column("canadian_spelling_score", sa.Float(), nullable=True),
        sa.Column("timezone_pattern", sa.String(length=50), nullable=True),
        sa.Column("subreddit_patterns", sa.Text(), nullable=True),
        sa.Column("cultural_markers", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("study_user_id"),
    )
    op.create_table(
        "misinformation_clusters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cluster_name", sa.String(length=200), nullable=True),
        sa.Column("cluster_description", sa.Text(), nullable=True),
        sa.Column("centroid_embedding", Vector(dim=384), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("post_count", sa.Integer(), nullable=True),
        sa.Column("avg_engagement", sa.Float(), nullable=True),
        sa.Column("primary_language", sa.String(length=10), nullable=True),
        sa.Column("subreddit_distribution", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "network_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("analysis_date", sa.DateTime(), nullable=True),
        sa.Column("num_nodes", sa.Integer(), nullable=True),
        sa.Column("num_edges", sa.Integer(), nullable=True),
        sa.Column("density", sa.Float(), nullable=True),
        sa.Column("num_communities", sa.Integer(), nullable=True),
        sa.Column("largest_community_size", sa.Integer(), nullable=True),
        sa.Column("avg_clustering_coefficient", sa.Float(), nullable=True),
        sa.Column("diameter", sa.Integer(), nullable=True),
        sa.Column("assortativity", sa.Float(), nullable=True),
        sa.Column("misinformation_centrality_correlation", sa.Float(), nullable=True),
        sa.Column("information_flow_speed", sa.Float(), nullable=True),
        sa.Column("metrics_json", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reddit_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=50), nullable=False),
        sa.Column("subreddit", sa.String(length=100), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("selftext", sa.Text(), nullable=True),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("upvote_ratio", sa.Float(), nullable=True),
        sa.Column("num_comments", sa.Integer(), nullable=True),
        sa.Column("url", sa.Text(), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("is_newcomer_related", sa.Boolean(), nullable=True),
        sa.Column("non_official_language_indicators", sa.Text(), nullable=True),
        sa.Column("code_switching_score", sa.Float(), nullable=True),
        sa.Column("translation_patterns", sa.Boolean(), nullable=True),
        sa.Column("cultural_health_references", sa.Text(), nullable=True),
        sa.Column("title_embedding", Vector(dim=384), nullable=True),
        sa.Column("content_embedding", Vector(dim=384), nullable=True),
        sa.Column("combined_embedding", Vector(dim=384), nullable=True),
        sa.Column("misinformation_score", sa.Float(), nullable=True),
        sa.Column("contains_health_keywords", sa.Boolean(), nullable=True),
        sa.Column("keyword_count", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("post_id"),
    )
    op.create_table(
        "user_stats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("annotator", sa.String(length=100), nullable=False),
        sa.Column("total_annotations", sa.Integer(), nullable=True),
        sa.Column("accuracy_score", sa.Float(), nullable=True),
        sa.Column("last_active", sa.DateTime(), nullable=True),
        sa.Column("achievements", sa.Text(), nullable=True),
        sa.Column("agreement_with_consensus", sa.Float(), nullable=True),
        sa.Column("expertise_score", sa.Float(), nullable=True),
        sa.Column("community_expertise", sa.Text(), nullable=True),
        sa.Column("language_communities", sa.Text(), nullable=True),
        sa.Column("cultural_competency_score", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("annotator"),
    )
    op.create_table(
        "cluster_memberships",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=50), nullable=True),
        sa.Column("cluster_id", sa.Integer(), nullable=True),
        sa.Column("distance_to_centroid", sa.Float(), nullable=True),
        sa.Column("membership_confidence", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cluster_id"],
            ["misinformation_clusters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "post_annotations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=50), nullable=True),
        sa.Column("annotator", sa.String(length=100), nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("confidence", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("is_consensus", sa.Boolean(), nullable=True),
        sa.Column("agreement_score", sa.Float(), nullable=True),
        sa.Column("severity_level", sa.Integer(), nullable=True),
        sa.Column("misinformation_type", sa.String(length=50), nullable=True),
        sa.Column("target_community", sa.String(length=100), nullable=True),
        sa.Column("intervention_priority", sa.String(length=20), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reddit_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("comment_id", sa.String(length=50), nullable=False),
        sa.Column("post_id", sa.String(length=50), nullable=True),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("body", sa.Text(), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.String(length=50), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("is_newcomer_related", sa.Boolean(), nullable=True),
        sa.Column("content_embedding", Vector(dim=384), nullable=True),
        sa.Column("misinformation_score", sa.Float(), nullable=True),
        sa.Column("contains_health_keywords", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("comment_id"),
    )
    op.create_table(
        "similar_content",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("source_post_id", sa.String(length=50), nullable=True),
        sa.Column("target_post_id", sa.String(length=50), nullable=True),
        sa.Column("similarity_score", sa.Float(), nullable=True),
        sa.Column("similarity_type", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["source_post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "misinformation_severity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("annotation_id", sa.Integer(), nullable=True),
        sa.Column("severity_level", sa.Integer(), nullable=True),
        sa.Column("harm_potential", sa.String(length=50), nullable=True),
        sa.Column("urgency_score", sa.Integer(), nullable=True),
        sa.Column("misinformation_type", sa.String(length=50), nullable=True),
        sa.Column("health_topic", sa.String(length=100), nullable=True),
        sa.Column("target_population", sa.String(length=100), nullable=True),
        sa.Column("suggested_response", sa.String(length=50), nullable=True),
        sa.Column("resource_needed", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["annotation_id"],
            ["post_annotations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_interactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("source_user_id", sa.String(length=100), nullable=True),
        sa.Column("target_user_id", sa.String(length=100), nullable=True),
        sa.Column("interaction_type", sa.String(length=50), nullable=True),
        sa.Column("post_id", sa.String(length=50), nullable=True),
        sa.Column("comment_id", sa.String(length=50), nullable=True),
        sa.Column("interaction_timestamp", sa.DateTime(), nullable=True),
        sa.Column("subreddit_context", sa.String(length=100), nullable=True),
        sa.Column("interaction_weight", sa.Float(), nullable=True),
        sa.Column("is_misinformation_related", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["reddit_comments.comment_id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_user_id"],
            ["canadian_user_proxies.study_user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_user_id"],
            ["canadian_user_proxies.study_user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "intervention_responses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=50), nullable=True),
        sa.Column("severity_id", sa.Integer(), nullable=True),
        sa.Column("response_type", sa.String(length=50), nullable=True),
        sa.Column("generated_content", sa.Text(), nullable=True),
        sa.Column("resource_links", sa.Text(), nullable=True),
        sa.Column("was_deployed", sa.Boolean(), nullable=True),
        sa.Column("deployment_timestamp", sa.DateTime(), nullable=True),
        sa.Column("effectiveness_score", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.post_id"],
        ),
        sa.ForeignKeyConstraint(
            ["severity_id"],
            ["misinformation_severity.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("intervention_responses")
    op.drop_table("user_interactions")
    op.drop_table("misinformation_severity")
    op.drop_table("similar_content")
    op.drop_table("reddit_comments")
    op.drop_table("post_annotations")
    op.drop_table("cluster_memberships")
    op.drop_table("user_stats")
    op.drop_table("reddit_posts")
    op.drop_table("network_metrics")
    op.drop_table("misinformation_clusters")
    op.drop_table("canadian_user_proxies")
    # ### end Alembic commands ###
